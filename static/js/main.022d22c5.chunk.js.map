{"version":3,"sources":["JsQr.tsx","Map.js","App.js","reportWebVitals.js","index.js"],"names":["JsQr","mediaStream","date","Date","toLocaleString","useState","torch","setTorch","qr","setqr","captureArea","useEffect","webcam","constraints1","video","facingMode","exact","zoom","width","height","optimizationMode","frameRate","advanced","constraints2","navigator","mediaDevices","getUserMedia","alert","message","track","getVideoTracks","console","log","getSettings","videoTag","document","getElementById","srcObject","state","applyConstraints","imageCapture","ImageCapture","getPhotoCapabilities","then","querySelector","addEventListener","canvasTag","createElement","setInterval","getContext","drawImage","window","screen","imageData","getImageData","data","qrCode","jsQR","style","textAlign","id","playsInline","autoPlay","muted","className","Map","lat","setLat","lon","setlon","pos","setPos","getLocation","geolocation","watchPosition","res","coords","longitude","latitude","err","enableHighAccuracy","maximumAge","timeout","position","MapContainer","center","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","require","App","color","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.022d22c5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport jsQR from \"jsqr\";\r\nexport default function JsQr() {\r\n  let date = new Date().toLocaleString()\r\n\r\n  const [torch, setTorch] = useState(false)\r\n  const [qr, setqr] = useState(\"זוזוו\");\r\n  let mediaStream : MediaStream;\r\n  const captureArea = {\r\n    x: 1,\r\n    y: 1,\r\n    width: 289,\r\n    height: 289,\r\n  };\r\n const as = async () =>{\r\n  let a = await navigator.mediaDevices.enumerateDevices();\r\n  console.log(a)\r\n }\r\n  useEffect(() => {\r\n    webcam();\r\n  }, []);\r\n  const webcam = async () => {\r\n    const constraints1 = {\r\n      video: { \r\n        facingMode:  {exact :\"environment\"},\r\n         zoom: 1.0,\r\n         width: 400,//{ min: 1024, ideal: 1280, max: 1920 },\r\n         height: 400,// { min: 576, ideal: 720, max: 1080 },\r\n      optimizationMode:'detail',\r\n      frameRate: 90},\r\n      advanced: [{torch: torch}]\r\n    };\r\n    const constraints2 = {\r\n      video: { \r\n        facingMode:  \"environment\",\r\n         zoom: 1.0,\r\n         width: 400,//{ min: 1024, ideal: 1280, max: 1920 },\r\n         height: 400,// { min: 576, ideal: 720, max: 1080 },\r\n      optimizationMode:'detail',\r\n      frameRate: 90},\r\n      advanced: [{torch: torch}]\r\n    };\r\ntry{\r\n   try{\r\n    mediaStream = await navigator.mediaDevices.getUserMedia(constraints1);\r\n   }catch(err){\r\n    mediaStream = await navigator.mediaDevices.getUserMedia(constraints2);\r\n   } \r\n}catch(e:any){\r\nalert(\"לא הצלחנו לגשת למצלמה\"+ e.message)\r\n}\r\n    \r\n    const track = mediaStream.getVideoTracks()[0];\r\n    console.log( track.getSettings())\r\n    \r\n    const videoTag = document.getElementById(\"videoo\") as HTMLVideoElement;\r\n   // videoTag.autoplay = true;\r\n    // videoTag.height = 290;\r\n    // videoTag.width = 290;\r\n    //@ts-ignore\r\n    // videoTag.setAttribute(\"autoplay\", true);\r\n    // //@ts-ignore\r\n    // videoTag.setAttribute(\"muted\", true);\r\n    // //@ts-ignore\r\n    // videoTag.setAttribute(\"playsinline\", true);\r\n    // if (\"srcObject\" in videoTag) {\r\n    videoTag.srcObject = mediaStream;\r\n    \r\n    const offOn =()=>{\r\n      let state = false;\r\n      state = !state;\r\n      //@ts-ignore\r\n         document.getElementById('video').srcObject.getVideoTracks()[0].applyConstraints({ advanced: [{ torch: state }] });\r\n    }\r\n  \r\n   //@ts-ignore\r\n   const imageCapture = new ImageCapture(track);\r\n   const photoCapabilities = imageCapture\r\n     .getPhotoCapabilities()\r\n     .then(() => { let state = false;\r\n      //let there be light!\r\n      const btn = document.querySelector(\".switch\") as HTMLElement;\r\n      btn.addEventListener(\"click\", function () {\r\n        state = !state;\r\n       setTorch(!torch)\r\n        track.applyConstraints({\r\n          //@ts-ignore\r\n          advanced: [{ torch: state }],\r\n        });\r\n      });\r\n    });\r\n  \r\n    var canvasTag = document.createElement(\"canvas\");\r\n    canvasTag.width = 350;\r\n    canvasTag.height = 350;\r\n    setInterval(() => {\r\n      let ctx = canvasTag.getContext(\"2d\")!;\r\n      //   console.log(window.screen.width,window.screen.height)\r\n      // console.log(window.screen.width/100*80,1,window.screen.height/100*50)\r\n      ctx.drawImage(\r\n        videoTag,\r\n        0,\r\n        0,\r\n        (window.screen.width / 100) * 80,\r\n        (window.screen.width / 100) * 80\r\n      );\r\n   \r\n      let imageData = canvasTag\r\n        .getContext(\"2d\")!\r\n        .getImageData(\r\n          captureArea.x,\r\n          captureArea.y,\r\n          captureArea.width,\r\n          captureArea.height\r\n        ).data;\r\n\r\n      // parsing qr code from canvas\r\n      const qrCode = jsQR(imageData, captureArea.width, captureArea.height);\r\n\r\n      if (qrCode) {\r\n        console.log(qrCode);\r\n        setqr(qrCode.data);\r\n        // mediaStream.getVideoTracks()[0].stop();\r\n        // mediaStream.getTracks().forEach(track => track.stop())\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div>{date}</div>\r\n  \r\n      <video id=\"videoo\" playsInline ={true} autoPlay={true} muted={true}\r\n       style={{ width: \"auto\" }}\r\n       ></video>\r\n       <button  className=\"switch\" >פנס</button>\r\n       <div>{qr}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Marker, MapContainer, Popup, TileLayer, useMapEvents, useMap } from \"react-leaflet\";\r\n\r\nconst Map = () => {\r\n  const [lat, setLat] = useState(32.168143114188624);\r\n  const [lon, setlon] = useState(35.23642820541842);\r\n  const [pos, setPos] = useState({lat:lat,lon:lon});\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n\r\n \r\n  const getLocation = () => {\r\n    return navigator.geolocation.watchPosition((res)=>{\r\n        console.log(res)      \r\n        setLat(res.coords.longitude)\r\n        setlon(res.coords.longitude)\r\n        setPos({lat:res.coords.latitude,lon: res.coords.longitude})\r\n        // alert('lon:'+res.coords.longitude + ' lat:'+res.coords.latitude)\r\n    }, (err)=>{\r\n        console.log(err)\r\n         alert(err.message)\r\n    }, {\r\n      enableHighAccuracy: true,\r\n      maximumAge: 100000,\r\n      timeout: 10000,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{position:\"10000\", textAlign:\"center\"}}>\r\n        latt:{lat} lon:{lon}\r\n        </div>\r\n      <MapContainer\r\n        style={{ height: \"85vh\", width: \"100wh\" }}\r\n        center={pos}\r\n        zoom={9}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={pos} >\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n        {/* <LocationMarker /> */}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n\r\nfunction LocationMarker() {\r\n        const [position, setPosition] = useState(null)\r\n        const map = useMapEvents({\r\n          click() {\r\n            map.locate()\r\n          },\r\n          locationfound(e) {\r\n            setPosition(e.latlng)\r\n            map.flyTo(e.latlng, map.getZoom())\r\n          },\r\n        })\r\n\r\n\r\n        return position === null ? null : (\r\n          <Marker position={position}>\r\n            <Popup>You are here</Popup>\r\n          </Marker>\r\n        )\r\n      }","import { Route, Switch, Link, BrowserRouter } from \"react-router-dom\";\r\nimport JsQr from \"./JsQr\";\r\nimport Map from \"./Map\";\r\nconst tiny = require(\"@ahuvia/tiny\");\r\n\r\nfunction App() {\r\n  let date = new Date().toLocaleString()\r\n  return (\r\n    <div>\r\n   <BrowserRouter>\r\n      <nav>\r\n      <div style={{color:'green', textAlign:'center'}}>{date}</div>\r\n        <ul>\r\n          <li><Link to=\"/map\">map</Link></li>\r\n          <li><Link to=\"/scanQr\">scanQr</Link></li>\r\n        </ul>\r\n      </nav>\r\n   <Switch>\r\n   <Route path=\"/map\">\r\n   <Map/>\r\n   </Route>\r\n   <Route path=\"/scanQr\">\r\n     <JsQr />\r\n     </Route>\r\n   </Switch>\r\n   </BrowserRouter>\r\n        {/* <Switch>\r\n      <Router history={}>\r\n        <Route path=\"/\" element={<Layout />}/>\r\n          <Route path=\"Map\" element={<Map />} />\r\n          <Route path=\"JsQr\" element={<JsQr />} />\r\n      </Router>\r\n        </Switch> */}\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
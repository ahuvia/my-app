{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","streamRef","useRef","useState","error","data","useTorchLight","current","on","toggle","onClick","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAkCeA,MA7Bf,WACE,IAAMC,EAAYC,iBAAO,MADZ,EAGaC,mBAAS,MAHtB,mBAGNC,EAHM,aAIWD,mBAAS,cAJpB,mBAINE,EAJM,aAMQC,YAAcL,EAAUM,UANhC,mBAMNC,EANM,KAMFC,EANE,KAYb,OACE,qCASE,wBAAQC,QAASD,EAAjB,SAA0BD,EAAK,gBAAkB,iBACjD,4BAAIG,KAAKC,UAAUP,EAAM,KAAM,KAC/B,4BAAIM,KAAKC,UAAUR,EAAO,KAAM,SCjBvBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.567bca97.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { useTorchLight } from \"@blackbox-vision/use-torch-light\";\nimport Troch from \"./Troch\";\n\nfunction App() {\n  const streamRef = useRef(null);\n\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(\"No result\");\n\n  const [on, toggle] = useTorchLight(streamRef.current);\n\n  const setRef = ({ stream }) => {\n    streamRef.current = stream;\n  };\n\n  return (\n    <>\n      {/* <Troch /> */}\n      {/* לא עובד\n      <QrReader\n        onLoad={setRef}\n        onScan={setData}\n        onError={setError}\n        style={{ width: \"100%\" }}\n      /> */}\n      <button onClick={toggle}>{on ? \"Disable Torch\" : \"Enable Torch\"}</button>\n      <p>{JSON.stringify(data, null, 2)}</p>\n      <p>{JSON.stringify(error, null, 2)}</p>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}